---

- name: Build and push "build" image
  args:
    executable: /bin/bash
  with_items: "{{ apps }}"
  shell: |
    set -ex
    NAME="{{ docker_repo }}:{{ name_prefix }}{{ item.name }}-build-latest"
    docker pull "${NAME}" || true
    docker build -t "${NAME}" \
      --target "build" \
      "{{ item.source }}"
    docker push "${NAME}"

- name: Build and push "runtime" image
  args:
    executable: /bin/bash
  with_items: "{{ apps }}"
  shell: |
    set -ex
    NAME="{{ docker_repo }}:{{ name_prefix }}{{ item.name }}-latest"
    NAME_BUILD="{{ docker_repo }}:{{ name_prefix }}{{ item.name }}-build-latest"
    docker pull "${NAME}" || true
    docker pull "${NAME_BUILD}" || true
    docker build -t "${NAME}" \
      --cache-from "${NAME_BUILD}" \
      --target "runtime" \
      "{{ item.source }}"
    docker push "${NAME}"

- name: Create task definition
  with_items: "{{ apps }}"
  ecs_taskdefinition:
    family: "{{ name_prefix }}{{ item.name }}"
    containers:
      - name: "main"
        essential: true
        image: "{{ docker_repo }}:{{ name_prefix }}{{ item.name }}-latest"
        portMappings: "{{ item.portMappings }}"
        environment: "{{ item.env }}"
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: "/ecs/{{ name_prefix }}{{ item.name }}"
            awslogs-region: "{{ aws_region }}"
            awslogs-stream-prefix: ecs
    launch_type: "{{ isFargate | ternary('FARGATE', 'EC2') }}"
    cpu: "{{ item.cpu }}"
    memory: "{{ item.memory }}"
    execution_role_arn: "{{ iam_role }}"
    state: present
    network_mode: awsvpc

- name: Create canary task definition
  with_items: "{{ apps }}"
  ecs_taskdefinition:
    family: "{{ name_prefix }}{{ item.name }}-canary"
    containers:
      - name: "main"
        essential: true
        image: "{{ docker_repo }}:{{ name_prefix }}{{ item.name }}-latest"
        portMappings: "{{ item.portMappings }}"
        environment: "{{ item.env + [{'name': 'DEMO_IS_CANARY', 'value': 'true'}] }}"
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: "/ecs/{{ name_prefix }}{{ item.name }}-canary"
            awslogs-region: "{{ aws_region }}"
            awslogs-stream-prefix: ecs
    launch_type: "{{ isFargate | ternary('FARGATE', 'EC2') }}"
    cpu: "{{ item.cpu }}"
    memory: "{{ item.memory }}"
    execution_role_arn: "{{ iam_role }}"
    state: present
    network_mode: awsvpc

- name: Update services
  args:
    executable: /bin/bash
  with_items: "{{ apps }}"
  shell: |
    set -ex
    NAME="{{ name_prefix }}{{ item.name }}"
    aws ecs update-service --cluster "{{ cluster_name }}" --service "{{ item.name }}" --task-definition "${NAME}" --force-new-deployment
    aws ecs update-service --cluster "{{ cluster_name }}" --service "{{ item.name }}-canary" --task-definition "${NAME}-canary" --force-new-deployment
